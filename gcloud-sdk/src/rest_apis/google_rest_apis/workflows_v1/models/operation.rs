use serde::{Deserialize, Serialize}; /*
                                      * Workflows API
                                      *
                                      * Manage workflow definitions. To execute workflows and manage executions, see the Workflows Executions API.
                                      *
                                      * The version of the OpenAPI document: v1
                                      *
                                      * Generated by: https://openapi-generator.tech
                                      */

/// Operation : This resource represents a long-running operation that is the result of a network API call.

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Operation {
    /// If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
    #[serde(rename = "done", skip_serializing_if = "Option::is_none")]
    pub done: Option<bool>,
    #[serde(rename = "error", skip_serializing_if = "Option::is_none")]
    pub error: Option<Box<crate::google_rest_apis::workflows_v1::models::Status>>,
    /// Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
    #[serde(rename = "metadata", skip_serializing_if = "Option::is_none")]
    pub metadata: Option<::std::collections::HashMap<String, serde_json::Value>>,
    /// The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
    #[serde(rename = "response", skip_serializing_if = "Option::is_none")]
    pub response: Option<::std::collections::HashMap<String, serde_json::Value>>,
}

impl Operation {
    /// This resource represents a long-running operation that is the result of a network API call.
    pub fn new() -> Operation {
        Operation {
            done: None,
            error: None,
            metadata: None,
            name: None,
            response: None,
        }
    }
}
