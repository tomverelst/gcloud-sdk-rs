use serde::{Deserialize, Serialize}; /*
                                      * Workflow Executions API
                                      *
                                      * Execute workflows created with Workflows API.
                                      *
                                      * The version of the OpenAPI document: v1
                                      *
                                      * Generated by: https://openapi-generator.tech
                                      */

/// StackTraceElement : A single stack element (frame) where an error occurred.

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct StackTraceElement {
    #[serde(rename = "position", skip_serializing_if = "Option::is_none")]
    pub position: Option<Box<crate::google_rest_apis::workflowexecutions_v1::models::Position>>,
    /// The routine where the error occurred.
    #[serde(rename = "routine", skip_serializing_if = "Option::is_none")]
    pub routine: Option<String>,
    /// The step the error occurred at.
    #[serde(rename = "step", skip_serializing_if = "Option::is_none")]
    pub step: Option<String>,
}

impl StackTraceElement {
    /// A single stack element (frame) where an error occurred.
    pub fn new() -> StackTraceElement {
        StackTraceElement {
            position: None,
            routine: None,
            step: None,
        }
    }
}
